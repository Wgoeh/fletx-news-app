"""
Reactivelist Component.

This component was auto-generated by fletx.

üõ†Ô∏è Customization Guide:
- You can change the parent class (`ft.Container`) to inherit from any other Flet control.
  ‚Üí Example: `ft.Text`, `ft.Row`, `ft.Column`, or any custom Flet widget.
- You can add or modify internal reactive attributes.
  ‚Üí Example: `self.title: RxStr = rx_title`
- You can define simple or advanced bindings using the fletx decorators
"""

import flet as ft
from typing import List, Any
from fletx.core import (
    RxStr, RxList
)
from fletx.decorators import (
    simple_reactive, reactive_control
)
from fletx.core.types import(
    BindingConfig, BindingType
)

from .newscard_component import NewscardComponent


# TRANSFORM TO WIDGET 
def transform_to_widget(items: List[Any]) -> List[ft.Control]:
    """Transform data into ListView Items Widgets"""
    print('\n\n\nTransforming to widget............................\n\n\n')

    return [
        NewscardComponent(item) for item in items.value
    ]


@reactive_control(
    bindings = {
        'controls': BindingConfig(
            reactive_attr = 'rx_items',
            binding_type = BindingType.ONE_WAY,
            transform_from_widget = lambda values: transform_to_widget(values)
        )
    }
)
class ReactivelistComponent(ft.ListView):    # üß© You can replace ft.Container with any other Flet control
    """Reactive Reactivelist Widget"""

    def __init__(self, rx_items: RxList = RxList([]), **kwargs):
        # üìù Define your reactive properties
        self.rx_items: RxList = rx_items
        print(self.rx_items.value)

        # üõ†Ô∏è kwargs allows passing any Flet control arguments like bgcolor, padding, etc.
        super().__init__(
            expand = True,
            # height= 300,
            # width= 300,
            spacing = 10,
            horizontal = True,
            **kwargs
        )

    def before_update(self):
        """Action to perform before component update"""

        self.controls.extend(transform_to_widget(self.rx_items))