"""
Newscard Component.

This component was auto-generated by fletx.

üõ†Ô∏è Customization Guide:
- You can change the parent class (`ft.Container`) to inherit from any other Flet control.
  ‚Üí Example: `ft.Text`, `ft.Row`, `ft.Column`, or any custom Flet widget.
- You can add or modify internal reactive attributes.
  ‚Üí Example: `self.title: RxStr = rx_title`
- You can define simple or advanced bindings using the fletx decorators
"""

from flet import *
from typing import Dict, Any
from fletx.core import (
    RxStr
)
from fletx.decorators import (
    simple_reactive
)
from fletx.navigation import navigate

from app.models import Article
from app.utils import dark_gradient

@simple_reactive(
    bindings={
        # üí° Example:
        # "bgcolor": 'rx_bg
        # ...
    }
)
class NewscardComponent(Container):    
    """Reactive Newscard Widget"""

    def __init__(self, data: Article, **kwargs):
        self.article = data

        super().__init__(
            # ink = True,
            expand = True,
            width = 270,
            border_radius = 20,
            # bgcolor = Colors.PRIMARY_CONTAINER,
            clip_behavior= ClipBehavior.HARD_EDGE,
            on_click = lambda e: navigate(
                '/details',data = {'article': self.article}
            ),
            **kwargs
        )

        self.content = self.build()

    def before_update(self):
        """Action to perform before component update"""

        # Example
        # self.content = self.build() # where build returns a flet control.

    def build(self):
        return Stack(
            expand = True,
            clip_behavior= ClipBehavior.HARD_EDGE,

            controls = [
                Container(
                    height = 300,
                    width = self.width,
                    border_radius = 20,

                    content = Image(
                        src = self.article.url_to_image,
                        expand = True,
                        fit = ImageFit.COVER,
                        animate_opacity = True
                    ),
                ),

                Container(
                    expand = True,
                    padding = 10,
                    border_radius = 20,
                    width = self.width,
                    gradient = dark_gradient,
                    clip_behavior = ClipBehavior.HARD_EDGE,

                    content = Column(
                        expand = True,
                        alignment = MainAxisAlignment.END,
                        horizontal_alignment = CrossAxisAlignment.CENTER,

                        controls = [
                            Text(self.article.title, size=16, weight=FontWeight.W_500),
                            Text(
                                self.article.description[:150] + '...',
                                size = 12,
                                text_align = TextAlign.START
                            ),
                            Container(
                                height = 10
                            )
                        ]
                    )
                )
            ]
        )